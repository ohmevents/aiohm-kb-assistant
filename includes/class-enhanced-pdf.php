<?php
/**
 * Enhanced PDF class for conversation exports
 */
if (!defined('ABSPATH')) exit;

// Only define the class if FPDF is available
if (class_exists('FPDF') && !class_exists('AIOHM_Enhanced_PDF')) {
    class AIOHM_Enhanced_PDF extends FPDF {
        function Header() {
            $this->SetFont('Arial', 'B', 20);
            $this->SetTextColor(31, 80, 20); // OHM brand green
            $this->Cell(0, 15, 'AIOHM Conversation Export', 0, 1, 'C');
            $this->Ln(5);
        }
        
        function Footer() {
            $this->SetY(-15);
            $this->SetFont('Arial', 'I', 8);
            $this->SetTextColor(128);
            $this->Cell(0, 10, 'Generated by AIOHM KB Assistant v' . AIOHM_KB_VERSION . ' - Page ' . $this->PageNo(), 0, 0, 'C');
        }
        
        function ChapterTitle($title) {
            $this->SetFont('Arial', 'B', 16);
            $this->SetTextColor(31, 80, 20);
            $this->Cell(0, 10, $title, 0, 1, 'L');
            $this->Ln(5);
        }
        
        function MessageBlock($sender, $content, $timestamp) {
            // Sender header with background
            $this->SetFont('Arial', 'B', 11);
            if ($sender === 'user') {
                $this->SetFillColor(240, 240, 240); // Light gray for user
                $this->SetTextColor(0, 0, 0);
            } else {
                $this->SetFillColor(31, 80, 20); // OHM green for assistant
                $this->SetTextColor(255, 255, 255);
            }
            
            $sender_name = ($sender === 'user') ? 'You' : 'Assistant';
            $header = $sender_name . ' - ' . gmdate('M j, Y g:i A', strtotime($timestamp));
            $this->Cell(0, 8, $header, 0, 1, 'L', true);
            
            // Message content
            $this->SetFont('Arial', '', 10);
            $this->SetTextColor(0, 0, 0);
            $this->SetFillColor(255, 255, 255);
            
            // Clean and format content
            $content = wp_strip_all_tags($content);
            $content = html_entity_decode($content, ENT_QUOTES, 'UTF-8');
            
            // Handle long lines by wrapping text properly
            $this->MultiCell(0, 6, $content, 0, 'L');
            $this->Ln(8);
            
            // Check if we need a new page
            if ($this->GetY() > 250) {
                $this->AddPage();
            }
        }
    }
}